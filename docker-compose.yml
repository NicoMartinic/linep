version: "3.3"
   
services:
  backend-db:
    image: postgres:13.2-alpine
    container_name: backend-db
    volumes: 
      - backend-data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: backend
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PG_SYSTEM_MAX_CONNECTIONS: 10
    ports:
      - 5432:5432
    networks:
      - linep-network
  backend:
    #volumes:
    #  - ./backend:/code
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: backend
    command: bash -c "python3 -m debugpy --listen 0.0.0.0:5678 -m uvicorn --workers 4 app.linepsite.asgi:application --host 0.0.0.0 --port 8001 --reload"
    ports:
      - 8001:8001
      - "5678:5678"
    depends_on:
      - backend-db
    networks:
      - linep-network
  frontend:
    container_name: frontend
    build:
      context: ./frontend/
      dockerfile: Dockerfile
      args:
        ENV: develop
        REACT_APP_API_SERVER_ADDRESS: http://localhost:8001
        REACT_APP_WS_SERVER_ADDRESS: ws://localhost:8001/ws/
    # volumes:
      #- './:/app/frontend'
      # - './frontend/node_modules:/app/frontend/node_modules'
      # - './frontend:/app/'
      # - '/app/node_modules'
    ports:
      - 3000:3000
    stdin_open: true
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: bash -c "cd /app && npm start --port 3000"
    networks:
      - linep-network

volumes: 
  backend-data:

networks:
  linep-network:
